// Auto-generated API types from OpenAPI schema
// Do not edit this file manually

export interface Product {
  id: string;
  name: string;
  description?: string;
  price?: number;
  iconId?: string;
  isDraft?: boolean;
  createdAt: string;
  updatedAt: string;
  lastOrdered?: string;
  nextPredictedPurchase?: string;
}

export interface Order {
  id: string;
  name: string;
  creationDate: string;
  purchaseDate: string;
  isDraft?: boolean;
  source?: 'MANUAL' | 'EMAIL' | 'API';
  originalEmailHash?: string;
  createdAt: string;
  updatedAt: string;
  lineItems: OrderLineItem[];
}

export interface OrderLineItem {
  id: string;
  productId: string;
  quantity: number;
  productName?: string;
  createdAt: string;
  product?: Product;
}

export interface CreateProductRequest {
  name: string;
  description?: string;
  price?: number;
  iconId?: string;
  isDraft?: boolean;
}

export interface UpdateProductRequest {
  name?: string;
  description?: string;
  price?: number;
  iconId?: string;
}

export interface CreateOrderRequest {
  name: string;
  creationDate: string;
  purchaseDate: string;
  isDraft?: boolean;
  source?: 'MANUAL' | 'EMAIL' | 'API';
  originalEmailHash?: string;
  lineItems: {
    productId?: string;
    quantity: number;
    productName?: string;
  }[];
}

export interface PredictionResponse {
  productId: string;
  predictedPurchaseDates: string[];
  averageFrequency: string;
  recommendedQuantity: number;
  monthlyConsumption: number;
}

export interface AuthUser {
  email: string;
  name: string;
  picture: string;
  sub: string;
}

export interface AuthTestResponse {
  message: string;
  user: AuthUser;
}

export const ProcessingStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  DUPLICATE: 'DUPLICATE'
} as const;

export type ProcessingStatus = typeof ProcessingStatus[keyof typeof ProcessingStatus];

export interface EmailProcessingLog {
  id: string;
  emailHash: string;
  status: ProcessingStatus;
  processingAttempts: number;
  lastAttemptAt?: string;
  errorMessage?: string;
  extractedOrderId?: string;
  createdAt: string;
  updatedAt: string;
}

export interface ApiError {
  error: string;
  message?: string;
  details?: any[];
}

// API endpoints base URL
export const API_BASE_URL = process.env.VITE_API_BASE_URL || 'http://localhost:3001/api';
