generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                String            @id @default(uuid())
  name              String
  description       String?
  price             Float?
  iconId            String?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  orderLineItems    OrderLineItem[]
  purchasePatterns  PurchasePattern[]

  @@map("products")
}

model Order {
  id           String          @id @default(uuid())
  name         String
  creationDate DateTime
  purchaseDate DateTime
  userId       String?         // Optional for now to support existing data
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  lineItems    OrderLineItem[]

  @@map("orders")
}

model OrderLineItem {
  id          String   @id @default(uuid())
  quantity    Int
  productName String?
  createdAt   DateTime @default(now())
  productId   String
  orderId     String
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("order_line_items")
}

model PurchasePattern {
  id                String   @id @default(uuid())
  userId            String
  productId         String
  intervalDays      Int
  notify            Boolean  @default(true)
  notifyDaysBefore  Int      @default(3)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  product           Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  // Constraints
  @@unique([userId, productId])
  @@map("purchase_patterns")
}

model PushSubscription {
  id        String   @id @default(uuid())
  endpoint  String   @unique
  p256dh    String
  auth      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("push_subscriptions")
}
